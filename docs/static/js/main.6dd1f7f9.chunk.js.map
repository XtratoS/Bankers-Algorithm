{"version":3,"sources":["components/CellContent.js","components/Header.js","components/Row.js","components/NeedMatrixRow.js","components/NeedMatrixHeader.js","vanilla/Banker.js","styles.js","components/RequestAdditionalResourcesModal.js","helpers.js","components/SaveStateModal.js","components/TextModal.js","App.js","reportWebVitals.js","index.js"],"names":["CellContent","props","k","className","text","onClick","increment","decrement","Header","useState","available","setAvailable","useEffect","banker","map","e","i","String","fromCharCode","charCodeAt","incrementAvailable","decrementAvailable","Row","setAllocated","setMax","index","process","allocated","allocatedResource","allocatedResourceIndex","incrementAllocated","hideNeedMatrix","decrementAllocated","max","maxResource","maxResourceIndex","incrementMax","decrementMax","NeedMatrixRow","needVector","resourceNeed","resourceIndex","NeedMatrixHeader","value","Process","resourceCount","this","length","push","finish","item","availableVector","need","Banker","processes","temporarilyAvailable","data","forEach","join","proccesIndex","inputResourceVector","temporaryVector","resourceVector","error","console","safeResult","safe","processSequence","keepLooping","willItRun","willItRunUsingResources","getProcessResources","end","every","restoreTemporarilyAvailableResources","p","availableResourceCount","log","input","split","parseInt","newBanker","j","undefined","addProcess","modalStyle","content","top","left","right","bottom","marginRight","transform","closeBtnStyle","display","marginLeft","marginBottom","RequestAdditionalResourcesModal","selectedProcess","selectProcess","requestedResources","setRequestedResources","handleChange","event","newRequestedResources","target","name","isOpen","modalOpen","style","onRequestClose","toggleModal","shouldCloseOnOverlayClick","id","defaultValue","onChange","disabled","_","placeholder","maxWidth","result","requestAdditionalResources","alert","Object","values","reduce","prevValue","currValue","Array","isArray","slice","requestPrinterHelper","Modal","setAppElement","SaveStateModal","onCopy","TextModal","status","toLowerCase","startsWith","App","setBanker","setResourceCount","setProcesses","setModalOpen","textAreaContent","setTextAreaContent","saveStateModalOpen","setSaveStateModalOpen","currentStateString","setCurrentStateString","textModalOpen","setTextModalOpen","resultText","setResultText","toggleSaveStateModal","toggleTextModal","setNeed","isNaN","fromString","getNeedMatrix","safePrinterHelper","encode","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dd1f7f9.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function CellContent(props) {\n\n  let k = 0;\n  return (\n    <div className=\"col\" key={k++}>\n      <div className=\"row\">\n        <div className=\"col d-flex justify-content-center align-items-center pe-0\">\n          {props.text}\n        </div>\n        <div className=\"col fs-6 text-center ps-0\">\n          <div className=\"row\">\n            <div className=\"col p-0\">\n              <i\n                className=\"fas fa-plus-square fa-lg hover-pointer text-success m-0\"\n                onClick={props.increment}\n              ></i>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col p-0\">\n              <i\n                className=\"fas fa-minus-square fa-lg hover-pointer text-danger m-0\"\n                onClick={props.decrement}\n              ></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport CellContent from './CellContent';\n\nfunction Header(props) {\n  const [available, setAvailable] = useState([]);\n  useEffect(() => {}, [available]);\n\n  const incrementAvailable = (i) => {\n    let available = [...props.banker.available];\n    available[i]++;\n    setAvailable(available);\n    props.banker.available = available;\n  }\n\n  const decrementAvailable = (i) => {\n    let available = [...props.banker.available];\n    available[i] > 0 && available[i]--;\n    setAvailable(available);\n    props.banker.available = available;\n  }\n\n  return (<>\n    <div className=\"row col-6 m-auto mt-4 pt-2 justify-content-center border border-dark\">\n      <div className=\"row text-center\">\n        <div className=\"col\">\n          Available\n        </div>\n      </div>\n      <div className=\"row text-center border-bottom border-dark\">\n        {props.banker.available.map((e, i) => (\n          <div key={i} className=\"col\">\n            <b>{String.fromCharCode('A'.charCodeAt(0) + i)}</b>\n          </div>\n        ))}\n      </div>\n      <div className=\"row text-center p-1\">\n        {props.banker.available.map((e, i) => (\n          <CellContent\n            key = {i}\n            text = {e}\n            increment = {() => {incrementAvailable(i)}}\n            decrement = {() => {decrementAvailable(i)}}\n          />\n        ))}\n      </div>\n    </div>\n      \n    <br/>\n    <div className=\"row\">\n      <div className=\"col text-center border border-dark border-bottom-0 m-0 p-1\">\n        Process Name\n      </div>\n      <div className=\"col text-center border border-dark border-bottom-0 m-0 p-1\">\n        Allocated\n      </div>\n      <div className=\"col text-center border border-dark border-bottom-0 m-0 p-1\">\n        Max\n      </div>\n    </div>\n    \n    <div className=\"row\">\n      <div className=\"row col text-center border border-top-0 border-dark m-0 p-1 justify-content-around\">\n      </div>\n      <div className=\"row col text-center border border-top-0 border-dark m-0 p-1 justify-content-around\">\n        {props.banker.available.map((e, i) => (\n          <div key={i} className=\"col\">\n            <b>{String.fromCharCode('A'.charCodeAt(0) + i)}</b>\n          </div>\n        ))}\n      </div>\n      <div className=\"row col text-center border border-top-0 border-dark m-0 p-1 justify-content-around\">\n        {props.banker.available.map((e, i) => (\n          <div key={i} className=\"col\">\n            <b>{String.fromCharCode('A'.charCodeAt(0) + i)}</b>\n          </div>\n        ))}\n      </div>\n    </div>\n  </>)\n}\n\nexport default Header;","import React, { useState } from 'react'\nimport CellContent from './CellContent';\n\nexport default function Row(props) {\n\n  const [allocated, setAllocated] = useState([]);\n  const [max, setMax] = useState([]);\n\n  const incrementAllocated = (index) => {\n    props.process.incrementAllocated(index);\n    setAllocated(props.process.allocated);\n    props.hideNeedMatrix();\n  }\n\n  const decrementAllocated = (index) => {\n    props.process.decrementAllocated(index);\n    setAllocated(props.process.allocated);\n    props.hideNeedMatrix();\n  }\n\n  const incrementMax = (index) => {\n    props.process.incrementMax(index);\n    setMax(props.process.max);\n    props.hideNeedMatrix();\n  }\n\n  const decrementMax = (index) => {\n    props.process.decrementMax(index);\n    setMax(props.process.max);\n    props.hideNeedMatrix();\n  }\n  \n  let k = 0;\n  return (\n    <div className=\"row\">\n      <div className=\"d-flex col text-center border border-dark border-top-0 m-0 p-1 justify-content-around align-items-center\">\n        P{props.index}\n      </div>\n      <div className=\"row col text-center border border-dark border-top-0 m-0 p-1 justify-content-around\">\n        {props.process.allocated.map((allocatedResource, allocatedResourceIndex) => (\n          <CellContent\n            key = {k++}\n            text = {allocatedResource}\n            index = {allocatedResourceIndex}\n            increment = {() => {incrementAllocated(allocatedResourceIndex)}}\n            decrement = {() => {decrementAllocated(allocatedResourceIndex)}}\n          />\n        ))}\n      </div>\n      <div className=\"row col text-center border border-dark border-top-0 m-0 p-1 justify-content-around\">\n        {props.process.max.map((maxResource, maxResourceIndex) => (\n          <CellContent\n            key = {k++}\n            text = {maxResource}\n            index = {maxResourceIndex}\n            increment = {() => {incrementMax(maxResourceIndex)}}\n            decrement = {() => {decrementMax(maxResourceIndex)}}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport default function NeedMatrixRow(props) {\n  return (\n    <div className=\"row m-0 p-0\">\n      <div className=\"col-4 text-center border border-dark border-bottom-0 border-start-0 m-0 p-1 justify-content-around\">\n        P{props.index}\n      </div>\n      <div className=\"row col-8 text-center border border-dark border-bottom-0 border-end-0 m-0 p-1 justify-content-around\">\n        {props.needVector.map((resourceNeed, resourceIndex) => (\n            <div className=\"col\" key={resourceIndex}>\n              {resourceNeed}\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NeedMatrixHeader(props) {\n  return (\n    <div className=\"row m-0 p-0\">\n      <div className=\"col-4 text-center\">\n        Process Name\n      </div>\n      <div className=\"col-8\">\n        <div className=\"row text-center\">\n          <div className=\"col\">\n            Needed Resources\n          </div>\n        </div>\n        <div className=\"row text-center p-1\">\n          {props.banker.available.map((value, index) => (\n            <div key={index} className=\"col\">\n              {String.fromCharCode('A'.charCodeAt(0) + index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export class Process {\n  constructor(resourceCount, allocated = [], max = []) {\n    this.allocated = allocated;\n    this.max = max;\n    while(this.allocated.length < resourceCount) {\n      this.allocated.push(0);\n    }\n    while(this.max.length < resourceCount) {\n      this.max.push(0);\n    }\n    this.finish = false;\n  }\n\n  incrementAllocated(k) {\n    let allocated = [...this.allocated];\n    allocated[k]++;\n    this.allocated = [...allocated];\n  }\n\n  decrementAllocated(k) {\n    let allocated = [...this.allocated];\n    if (allocated[k] > 0) {\n      allocated[k]--;\n      this.allocated = [...allocated];\n    }\n  }\n\n  incrementMax(k) {\n    let max = [...this.max];\n    max[k]++;\n    this.max = [...max];\n  }\n\n  decrementMax(k) {\n    let max = [...this.max];\n    if (max[k] > 0) {\n      max[k]--;\n      this.max = [...max];\n    }\n  }\n  \n  copy() {\n    return new Process(this.allocated.length, [...this.allocated], [...this.max])\n  }\n  \n  need() {\n    let needVector = this.max.map((item, index) => item - this.allocated[index]);\n    return needVector;\n  }\n  \n  willItRunUsingResources(availableVector) {\n    let needVector = this.need();\n    for (let i=0; i < availableVector.length; i++) {\n      if (needVector[i] > availableVector[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  \n  end() {\n    this.finish = true;\n  }\n}\n  \nexport class Banker {\n  constructor(resourceCount) {\n    this.processes = [];\n    this.available = [];\n    this.temporarilyAvailable = [];\n    for (let i=0; i<resourceCount; i++){\n      this.available.push(0);\n    }\n    this.temporarilyAvailable = [...this.available];\n  }\n\n  static fromString(input) {\n    let i = 0;\n    let data = input.split(',').map(i => parseInt(i));\n    let resourceCount = data[i++];\n    let newBanker = new Banker(resourceCount);\n    let available = [];\n\n    for (let j=0; j<resourceCount; j++) {\n      available.push(data[i++]);\n    }\n\n    while (data[i] !== undefined) {\n      let allocated = [];\n      let max = [];\n      for (let j=0; j<resourceCount; j++) {\n        allocated.push(data[i++]);\n      }\n      for (let j=0; j<resourceCount; j++) {\n        max.push(data[i++]);\n      }\n      newBanker.addProcess(new Process(resourceCount, allocated, max));\n      newBanker.setAvailable(available);\n    }\n    return newBanker;\n  }\n\n  encode() {\n    let data = [this.available.length, ...this.available];\n    this.processes.forEach(process => {\n      data = [...data, ...process.allocated, ...process.max];\n    });\n    return data.join(',');\n  }\n  \n  addProcess(process) {\n    this.processes = [...this.processes, process];\n  }\n  \n  setAvailable(available) {\n    this.available = [...available];\n  }\n  \n  requestAdditionalResources(proccesIndex, inputResourceVector) {\n    // Temporary vector to store original state\n    let temporaryVector = [];\n    let resourceVector = [...inputResourceVector];\n    while(resourceVector.length < this.available.length) {\n    \tresourceVector.push(0);\n    }\n\n    // Commit the request\n    try {\n\t\t\tlet process = this.processes[proccesIndex];\n      // console.log(`${JSON.stringify(process)} at ${proccesIndex} is requesting resources`);\n\t\t\tthis.processes[proccesIndex].allocated = process.allocated.map((value, index) => {\n        temporaryVector[index] = resourceVector[index];\n        return (value + resourceVector[index]);\n      });\n\t\t\tthis.available = this.available.map((value, index) => {\n        return (value - resourceVector[index]);\n      });\n    } catch (error) {\n    \tconsole.error('Invalid Index Provided to requestAdditionalResources');\n      return;\n    }\n\n    // Check for system safety after commiting the request\n    let safeResult = this.safe();\n\n    // Append the request to the start of the safe result\n    safeResult[1] = [`${proccesIndex}req` ,...safeResult[1]];\n\n    // Restore original state\n    temporaryVector.forEach((item, index) => {\n      this.processes[proccesIndex].allocated[index] -= item;\n      this.available[index] += item;\n    });\n    return safeResult;\n  }\n  \n  safe() {\n    let processSequence = [];\n    let keepLooping = true;\n    while(true) {\n\t\t\tif (!keepLooping) break;\n\t\t\tkeepLooping = false;\n\t\t\tfor (let i = 0; i < this.processes.length; i++) {\n        let process = this.processes[i];\n        let finish = process.finish;\n        let willItRun = process.willItRunUsingResources(this.available);\n\n        if (finish === false && willItRun) {\n          this.getProcessResources(process);\n          process.end();\n          keepLooping = true;\n          processSequence.push(i);\n        }\n\t\t\t}\n    }\n    let allFinished = this.processes.every(process => process.finish)\n    if (allFinished) {\n      this.restoreTemporarilyAvailableResources();\n      this.processes = this.processes.map(p => {\n        p.finish = false;\n        return p;\n      });\n\t\t\treturn [true, processSequence];\n    }\n    this.restoreTemporarilyAvailableResources();\n    return [false, []];\n  }\n\n  restoreTemporarilyAvailableResources() {\n    this.available = this.available.map((availableResourceCount, index) => (\n      availableResourceCount - this.temporarilyAvailable[index]\n    ));\n    this.temporarilyAvailable = this.temporarilyAvailable.map(() => 0);\n  }\n  \n  getProcessResources(process) {\n    for (let i=0; i < process.allocated.length; i++) {\n      this.available[i] += process.allocated[i];\n      this.temporarilyAvailable[i] += process.allocated[i];\n    }\n  }\n\n  getNeedMatrix() {\n    let out = this.processes.map((process) => {\n      return process.need();\n    });\n    return out;\n  }\n  \n  print() {\n    console.log(`Available:`, this.available);\n    for (let i=0; i<this.processes.length; i++) {\n      console.log(`Process ${i}: `, this.processes[i]);\n    }\n  }\n}","export const modalStyle = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nexport const closeBtnStyle = {\n  display: 'block',\n  marginLeft: 'auto',\n  marginBottom: '20px',\n}","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { requestPrinterHelper } from '../helpers';\nimport { modalStyle, closeBtnStyle } from '../styles';\n\nModal.setAppElement(\"#root\");\n\nexport default function RequestAdditionalResourcesModal(props) {\n  const [selectedProcess, selectProcess] = useState(null);\n  const [requestedResources, setRequestedResources] = useState(\n    props.banker.available.map(() => 0)\n  );\n\n  const handleChange = (event) => {\n    let newRequestedResources = [...requestedResources];\n    newRequestedResources[parseInt(event.target.name)] = parseInt(event.target.value);\n    setRequestedResources(newRequestedResources);\n  }\n\n  const submitRequest = () => {\n    if (selectedProcess === null) {\n      props.toggleModal();\n      return;\n    }\n\n    let result = props.banker.requestAdditionalResources(selectedProcess, requestedResources);\n    alert(requestPrinterHelper(result));\n    props.toggleModal();\n  }\n\n  return (\n    <Modal\n      isOpen = {props.modalOpen}\n      style = {modalStyle}\n      onRequestClose = {props.toggleModal}\n      shouldCloseOnOverlayClick = {true}\n    >\n      <button\n        className=\"btn btn-white p-0\"\n        style={closeBtnStyle}\n        onClick={props.toggleModal}>\n          <i\n            className=\"fas fa-times-circle fa-lg hover-pointer text-danger m-0\"\n          ></i>\n      </button>\n      <div className=\"row text-center mb-4\">\n        <div className=\"col\">\n          <select\n            name=\"process\"\n            id=\"process\"\n            defaultValue=\"-\"\n            onChange={(event) => {\n              selectProcess(parseInt(event.target.value))\n            }}\n          >\n            <option key={-1} value={'-'} disabled={true}>Please select a process</option>\n            {props.banker.processes.map((_, index) => {\n              return (\n                <option key={index} value={index}>\n                  P{index}\n                </option>\n              )\n            })}\n          </select>\n        </div>\n      </div>\n      <div className=\"row justify-content-around mb-4\">\n      {props.banker.available.map((availableResourceCount, index) => (\n        <div className=\"col\" key={index}>\n          <input\n            name={index}\n            onChange={handleChange}\n            className=\"form-control\"\n            placeholder={String.fromCharCode('A'.charCodeAt(0) + index)}\n            style={{maxWidth: '60px'}}\n          />\n        </div>\n      ))}\n      </div>\n\n      <div className=\"row text-center\">\n        <div className=\"col\">\n          <button className=\"btn btn-success\" onClick={submitRequest}>\n            Request Resources\n          </button>\n        </div>\n      </div>\n\n    </Modal>\n  )\n}\n","export function safePrinterHelper(result) {\n  if (!result[0]) return 'No';\n  return `Yes, Safe state ${\n    Object.values(result[1]).reduce((prevValue, currValue) => prevValue + `P${currValue},`, '<')\n  }`.slice(0, -1) + '>'\n}\n\nexport function requestPrinterHelper(result) {\n  if (!result[0]) return 'No';\n  return `Yes, the request can be granted with safe state, Safe state ${\n    Object.values(result[1]).reduce(\n      (prevValue, currValue) => (\n        prevValue + `P${Array.isArray(currValue) ? currValue.join('') : currValue},`\n      ), '<')\n  }`.slice(0, -1) + '>'\n}","import React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Modal from 'react-modal';\nimport { modalStyle } from '../styles';\n\nexport default function SaveStateModal(props) {\n  return (\n    <Modal\n      isOpen = {props.modalOpen}\n      style = {modalStyle}\n      onRequestClose = {props.toggleModal}\n      shouldCloseOnOverlayClick = {true}\n    >\n      <div className=\"m-4\">\n        {props.text}\n      </div>\n      <div className=\"m-4 text-center\">\n        <CopyToClipboard text={props.text}\n          onCopy={() => alert('Copied to clipboard')}>\n          <button className=\"btn btn-primary\">Copy to Clipboard</button>\n        </CopyToClipboard>\n      </div>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { modalStyle, closeBtnStyle } from '../styles';\n\nexport default function TextModal(props) {\n\n  let status = props.text.toLowerCase().startsWith('yes') ? 'success' : 'danger';\n\n  return (\n    <Modal\n      isOpen = {props.modalOpen}\n      style = {modalStyle}\n      onRequestClose = {props.toggleModal}\n      shouldCloseOnOverlayClick = {true}\n    >\n      <button\n        className=\"btn btn-white p-0\"\n        style={closeBtnStyle}\n        onClick={props.toggleModal}\n      >\n        <i\n          className=\"fas fa-times-circle fa-lg hover-pointer text-danger m-0\"\n        ></i>\n      </button>\n      <div className={`alert alert-${status}`}>\n        {props.text}\n      </div>\n    </Modal>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport './bootstrap.css';\n\nimport Header from './components/Header';\nimport Row from './components/Row';\nimport NeedMatrixRow from './components/NeedMatrixRow';\nimport NeedMatrixHeader from './components/NeedMatrixHeader';\nimport { Banker, Process } from './vanilla/Banker';\nimport { safePrinterHelper } from './helpers';\nimport RequestAdditionalResourcesModal from './components/RequestAdditionalResourcesModal';\nimport SaveStateModal from './components/SaveStateModal';\nimport TextModal from './components/TextModal';\n\nfunction App() {\n\n  const [banker, setBanker] = useState(null);\n  const [resourceCount, setResourceCount] = useState('');\n  \n  const [processes, setProcesses] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [textAreaContent, setTextAreaContent] = useState('');\n\n  const [saveStateModalOpen, setSaveStateModalOpen] = useState(false);\n  const [currentStateString, setCurrentStateString] = useState('');\n\n  const [textModalOpen, setTextModalOpen] = useState(false);\n  const [resultText, setResultText] = useState('');\n\n  useEffect(() => {\n    banker && banker.processes && setProcesses(banker.processes);\n  }, [banker]);\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  }\n\n  const toggleSaveStateModal = () => {\n    setSaveStateModalOpen(!saveStateModalOpen);\n  }\n\n  const toggleTextModal = () => {\n    setTextModalOpen(!textModalOpen);\n  }\n\n  const [need, setNeed] = useState(null);\n\n  const addProcess = () => {\n    banker.addProcess(new Process(banker.available.length));\n    setProcesses([...banker.processes]);\n    hideNeedMatrix();\n  }\n\n  const showNeedMatrix = () => {\n    setNeed(banker.getNeedMatrix());\n  }\n\n  const hideNeedMatrix = () => {\n    setNeed(null);\n  }\n\n  const checkSafeState = () => {\n    let result = banker.safe();\n    setResultText(safePrinterHelper(result));\n    toggleTextModal();\n  }\n\n  let k = 0;\n\n  if (banker === null) {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-4\">\n          <div className=\"col row\">\n            <div className=\"col-9 m-auto text-center\">\n              <label className=\"form-label fs-4 mb-4\">\n                Enter the number of resources\n              </label>\n              <input\n                className = \"form-control fs-5 mb-4\"\n                onChange = {(event) => {\n                  setResourceCount(event.target.value);\n                }}\n                placeholder = \"Resources\"\n              />\n              <button\n                className = \"btn btn-primary fs-5\"\n                disabled = {resourceCount === ''}\n                onClick = {() => {\n                if (resourceCount && !isNaN(parseInt(resourceCount)) && resourceCount > 0) {\n                  let newBanker = new Banker(resourceCount);\n                  setBanker(newBanker);\n                }\n              }}>Submit</button>\n            </div>\n          </div>\n          <div className=\"col-1 d-flex justify-content-center align-items-center\">\n            OR\n          </div>\n          <div className=\"col row\">\n            <div className=\"col-9 m-auto text-center\">\n              <label className=\"form-label fs-4 mb-4\">\n                Enter a state string\n              </label>\n              <textarea\n                className = \"form-control fs-5 mb-4\"\n                value = {textAreaContent}\n                onChange = {(event) => {setTextAreaContent(event.target.value)}}\n              />\n              <button className=\"btn btn-primary fs-5\"\n                disabled={textAreaContent === ''}\n                onClick={() => {\n                  if (textAreaContent !== '') {\n                    setBanker(Banker.fromString(textAreaContent));\n                  }\n                }}\n              >\n                Enter State\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"container my-4 py-4 fs-5\">\n      <TextModal\n        text = {resultText}\n        modalOpen = {textModalOpen}\n        toggleModal = {toggleTextModal}\n      />\n      <RequestAdditionalResourcesModal\n        banker = {banker}\n        modalOpen = {modalOpen}\n        toggleModal = {toggleModal}\n      />\n      <SaveStateModal\n        text = {currentStateString}\n        modalOpen = {saveStateModalOpen}\n        toggleModal = {toggleSaveStateModal}\n      />\n      <button className=\"btn btn-secondary fs-5 me-2 mb-2\" onClick={addProcess}>Add Process</button>\n      <button className=\"btn btn-primary fs-5 me-2 mb-2\" onClick={showNeedMatrix}>Show Need Matrix</button>\n      <button className=\"btn btn-primary fs-5 me-2 mb-2\" onClick={checkSafeState}>Check System Safety</button>\n      <button className=\"btn btn-warning fs-5 me-2 mb-2\" onClick={() => {toggleModal()}}>Check Request Safety</button>\n      <button className=\"btn btn-success fs-5 me-2 mb-2\" onClick={() => {\n        setCurrentStateString(banker.encode());\n        toggleSaveStateModal();\n      }}>Save State</button>\n      <button className=\"btn btn-dark fs-5 me-2 mb-2\" onClick={() => {window.location.reload()}}>Reset</button>\n      <Header\n        hideNeedMatrix = {hideNeedMatrix}\n        banker = {banker}\n      />\n      {processes.map(process => {\n        return (\n          <Row\n            key = {k}\n            index = {k++}\n            hideNeedMatrix = {hideNeedMatrix}\n            process = {process}\n          />\n        )\n      })}\n      <br />\n      {need &&\n        <div className=\"row border border-dark\">\n          <NeedMatrixHeader\n            banker = {banker}\n          />\n          {need.map((needVector, index) => (\n            <NeedMatrixRow\n              key = {index}\n              index = {index}\n              needVector = {needVector}\n            />\n          ))}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}